// <auto-generated />
using System;
using CustomKeyboardsWeb.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomKeyboardsWeb.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationMySqlDbContext))]
    [Migration("20230512221742_M_FristCreateDatabase_M")]
    partial class M_FristCreateDatabase_M
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Key", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Key", (string)null);
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Keyboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("IdKey")
                        .HasColumnType("int");

                    b.Property<int?>("IdSwitch")
                        .HasColumnType("int");

                    b.Property<int>("KeyId")
                        .HasColumnType("int");

                    b.Property<int>("SwitchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdKey");

                    b.HasIndex("IdSwitch");

                    b.HasIndex("KeyId");

                    b.HasIndex("SwitchId");

                    b.ToTable("Keyboard", (string)null);
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.PuchaseHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdKeyboard")
                        .HasColumnType("int");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int");

                    b.Property<int>("KeyboardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PuchaseDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdKeyboard");

                    b.HasIndex("IdSupplier");

                    b.HasIndex("KeyboardId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PuchaseHistory", (string)null);
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Switch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Switch", (string)null);
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Customer", b =>
                {
                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("AddressValue");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Cep", "Cep", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar(15)")
                                .HasColumnName("Cep");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.FantasyName", "FantasyName", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("FantasyName");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.FederativeUnit", "FederativeUnit", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("varchar(5)")
                                .HasColumnName("FederativeUnit");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Phone", "Phone", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Phone");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Cep")
                        .IsRequired();

                    b.Navigation("FantasyName")
                        .IsRequired();

                    b.Navigation("FederativeUnit")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Key", b =>
                {
                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("KeyId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("KeyId");

                            b1.ToTable("Key");

                            b1.WithOwner()
                                .HasForeignKey("KeyId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("KeyId")
                                .HasColumnType("int");

                            b1.Property<double>("Value")
                                .HasPrecision(15, 4)
                                .HasColumnType("double")
                                .HasColumnName("Price");

                            b1.HasKey("KeyId");

                            b1.ToTable("Key");

                            b1.WithOwner()
                                .HasForeignKey("KeyId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Keyboard", b =>
                {
                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Key", null)
                        .WithMany()
                        .HasForeignKey("IdKey")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Switch", null)
                        .WithMany()
                        .HasForeignKey("IdSwitch")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Key", "Key")
                        .WithMany()
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Switch", "Switch")
                        .WithMany()
                        .HasForeignKey("SwitchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("KeyboardId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("KeyboardId");

                            b1.ToTable("Keyboard");

                            b1.WithOwner()
                                .HasForeignKey("KeyboardId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("KeyboardId")
                                .HasColumnType("int");

                            b1.Property<double>("Value")
                                .HasPrecision(15, 4)
                                .HasColumnType("double")
                                .HasColumnName("Price");

                            b1.HasKey("KeyboardId");

                            b1.ToTable("Keyboard");

                            b1.WithOwner()
                                .HasForeignKey("KeyboardId");
                        });

                    b.Navigation("Key");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Switch");
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.PuchaseHistory", b =>
                {
                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Customer", null)
                        .WithMany()
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Keyboard", null)
                        .WithMany()
                        .HasForeignKey("IdKeyboard")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Supplier", null)
                        .WithMany()
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Keyboard", "Keyboard")
                        .WithMany()
                        .HasForeignKey("KeyboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomKeyboardsWeb.Domain.Primitives.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("PuchaseHistoryId")
                                .HasColumnType("int");

                            b1.Property<double>("Value")
                                .HasPrecision(15, 4)
                                .HasColumnType("double")
                                .HasColumnName("Price");

                            b1.HasKey("PuchaseHistoryId");

                            b1.ToTable("PuchaseHistory");

                            b1.WithOwner()
                                .HasForeignKey("PuchaseHistoryId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("Keyboard");

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Supplier", b =>
                {
                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("Address");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Cep", "Cep", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar(15)")
                                .HasColumnName("Cep");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.FantasyName", "FantasyName", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(40)
                                .HasColumnType("varchar(40)")
                                .HasColumnName("FantasyName");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.FederativeUnit", "FederativeUnit", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("varchar(5)")
                                .HasColumnName("FederativeUnit");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Phone", "Phone", b1 =>
                        {
                            b1.Property<int>("SupplierId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Phone");

                            b1.HasKey("SupplierId");

                            b1.ToTable("Supplier");

                            b1.WithOwner()
                                .HasForeignKey("SupplierId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Cep")
                        .IsRequired();

                    b.Navigation("FantasyName")
                        .IsRequired();

                    b.Navigation("FederativeUnit")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Phone");
                });

            modelBuilder.Entity("CustomKeyboardsWeb.Domain.Primitives.Switch", b =>
                {
                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Color", "Color", b1 =>
                        {
                            b1.Property<int>("SwitchId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Color");

                            b1.HasKey("SwitchId");

                            b1.ToTable("Switch");

                            b1.WithOwner()
                                .HasForeignKey("SwitchId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("SwitchId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("SwitchId");

                            b1.ToTable("Switch");

                            b1.WithOwner()
                                .HasForeignKey("SwitchId");
                        });

                    b.OwnsOne("CustomKeyboardsWeb.Domain.Primitives.Common.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("SwitchId")
                                .HasColumnType("int");

                            b1.Property<double>("Value")
                                .HasPrecision(15, 4)
                                .HasColumnType("double")
                                .HasColumnName("Price");

                            b1.HasKey("SwitchId");

                            b1.ToTable("Switch");

                            b1.WithOwner()
                                .HasForeignKey("SwitchId");
                        });

                    b.Navigation("Color")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
